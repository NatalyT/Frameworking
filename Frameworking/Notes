

2016 05 05 XCode 7.3
**** Found this here for Integerating Swift into an Objective C project (within the same module)
http://stackoverflow.com/questions/24206732/cant-use-swift-classes-inside-objective-c


Step by step swift integration for Xcode Objc-based project:
Create new *.swift file (in Xcode) or add it by using Finder
Add swift bridging empty header if Xcode have not done this before (see 4 below)
Implement your Swift class by using @objc attribute:
import UIKit

@objc class Hello: NSObject {
func sayHello() {
print("Hi there!")
}
}
Open Build Settings for the App Target and check these parameters:
Product Module Name : myproject
Defines Module : YES
Embedded Content Contains Swift : YES
Install Objective-C Compatibility Header : YES
Objective-C Bridging Header : $(SRCROOT)/Sources/SwiftBridging.h
Import header-> #import "myproject-Swift.h" (which is auto generated by Xcode) in your *.m file

Clean and rebuild your Xcode project
Profit!

**** Now all of that is to get swift and Objective C to work together in the same module.. to allow an Objective C module to access code in another Module (coded in Swift)..
1.  To make thing easy, you can create the framework right there from within the project
  File > New > Target > iOS > Framework & Library > Cocoa Touch Framework
.. which will do the following for you:
  a. add embedded binaries to the App Target (Target> General > Embedded Binaries)
  b. add Linked Framework to the App Target (Target > General > Linked Framework and Libraries)
  c. add Dependency to the App Target (Target > Build Phases> Target Dependencies
  d. add Linked Libraries to the App Target (Target > Build Phases> Linked Libraries and Binaries
  e. 

